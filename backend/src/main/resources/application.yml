server:
  port: 8080
  forward-headers-strategy: native
spring:
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.session.SessionAutoConfiguration
  application:
    name: back
  config:
    import: optional:file:.env[.properties]
  profiles:
    active: dev
  output:
    ansi:
      enabled: always
  datasource:
    hikari:
      auto-commit: false
  jackson:
    serialization:
      fail-on-empty-beans: false
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
        default_batch_fetch_size: 100
    open-in-view: false
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${SPRING__SECURITY__OAUTH2__CLIENT__REGISTRATION__KAKAO__CLIENT_ID}
            scope: profile_nickname, profile_image
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
          google:
            client-id: ${SPRING__SECURITY__OAUTH2__CLIENT__REGISTRATION__GOOGLE__CLIENT_ID}
            client-secret: ${SPRING__SECURITY__OAUTH2__CLIENT__REGISTRATION__GOOGLE__CLIENT_SECRET}
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
            client-name: Google
            scope: profile
          naver:
            client-id: ${SPRING__SECURITY__OAUTH2__CLIENT__REGISTRATION__NAVER__CLIENT_ID}
            client-secret: ${SPRING__SECURITY__OAUTH2__CLIENT__REGISTRATION__NAVER__CLIENT_SECRET}
            scope: profile_nickname, profile_image
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
springdoc:
  default-produces-media-type: application/json;charset=UTF-8
logging:
  level:
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE
    org.springframework.transaction.interceptor: TRACE
    com.back: DEBUG
management:
  endpoints:
    web:
      base-path: /actuator            # 기본값이지만 명시
      exposure:
        include: health,info          # 필요시 metrics 등 추가
  endpoint:
    health:
      probes:
        enabled: true                 # /actuator/health/{liveness,readiness} 활성화
      show-details: never             # 프로브 용도면 never 권장(민감정보 차단)
custom:
  dev:
    cookieDomain: localhost
    frontUrl: "http://${custom.dev.cookieDomain}:3000"
    backUrl: "http://${custom.dev.cookieDomain}:${server.port}"
  prod:
    cookieDomain: p-14566-1.sik2.site
    frontUrl: "https://www.${custom.prod.cookieDomain}"
    backUrl: "https://api.${custom.prod.cookieDomain}"
  site:
    cookieDomain: "${custom.dev.cookieDomain}"
    frontUrl: "${custom.dev.frontUrl}"
    backUrl: "${custom.dev.backUrl}"
    name: p-14566-1
  jwt:
    secretKey: ${CUSTOM__JWT__SECRET_KEY}
  accessToken:
    expireSeconds: "#{60*20}"
  notProdMembers:
    - username: KAKAO__123132423
      apiKey: kakao__1
      nickname: 카카오소셜회원
      profileImgUrl: https://picsum.photos/300/300
    - username: GOOGLE__1123123123213132
      apiKey: google__1
      nickname: 구글소셜회원
      profileImgUrl: https://picsum.photos/300/300
    - username: NAVER__xzccxcqw123123
      apiKey: naver__1
      nickname: 네이버소셜회원
      profileImgUrl: https://picsum.photos/300/300